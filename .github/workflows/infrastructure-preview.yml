name: Infrastructure Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual infrastructure deployment'

jobs:
  deploy:
    name: Deploy Infrastructure Changes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Pulumi CLI
        uses: pulumi/actions@v5

      - name: Check Pulumi authentication and organization
        run: |
          echo "=== Pulumi Authentication Check ==="
          pulumi whoami
          echo "=== Current Default Organization ==="
          pulumi org get-default
          echo "=== Setting Default Organization ==="
          pulumi org set-default adamgordonbell-org
          echo "=== Verifying Default Organization ==="
          pulumi org get-default
          echo "=== Available Stacks ==="
          pulumi stack ls --all
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ca-central-1
        run: |
          echo "AWS credentials configured"

      - name: Preview Infrastructure (PRs)
        if: github.event_name == 'pull_request'
        id: preview
        run: |
          echo "=== Running Pulumi Preview ==="
          pulumi preview --stack adamgordonbell-org/CA-prod --diff --show-replacement-steps --color=always 2>&1 | tee deploy_output.txt
          echo "=== Preview Complete ==="
          echo "DEPLOY_OUTPUT<<EOF" >> $GITHUB_ENV
          cat deploy_output.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ca-central-1

      - name: Deploy Infrastructure (Push to main)
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        id: deploy
        run: |
          echo "=== Running Pulumi Up ==="
          pulumi up --stack adamgordonbell-org/CA-prod --diff --suppress-progress --show-replacement-steps --parallel 4 --color=always -y 2>&1 | tee deploy_output.txt
          echo "=== Deployment Complete ==="
          echo "DEPLOY_OUTPUT<<EOF" >> $GITHUB_ENV
          cat deploy_output.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ca-central-1

      - name: Comment PR with preview results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deployOutput = process.env.DEPLOY_OUTPUT || 'Preview output not captured';
            const output = `
            ## üëÄ Infrastructure Preview Results

            **Stack**: CA-prod | **Region**: ca-central-1 | **Organization**: adamgordonbell-org

            ‚ö†Ô∏è **This is a preview only** - no changes have been deployed. Changes will be applied when this PR is merged to main.

            ### Preview Output:
            \`\`\`
            ${deployOutput}
            \`\`\`

            üìã [View full workflow details](${context.payload.pull_request.html_url}/checks)
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });